openapi: '3.0.3'
info:
  version: 1.0.0
  title: IG Log API
  description: API for LLM observations via IG Log
paths:
  /projects:
    get:
      tags: 
        - Projects
      summary: Get all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    projectId:
                      type: string
                    name:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
    post:
      tags: 
        - Projects
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  projectId:
                    type: string
                  name:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
  /projects/{projectId}:
    get:
      tags: 
        - Projects
      summary: Get a project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  projectId:
                    type: string
                  name:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    delete:
      tags: 
        - Projects
      summary: Delete a project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Project deleted
        '404':
          description: Project not found
  /projects/{projectId}/sessions:
    get:
      tags: 
        - Sessions
      summary: Get all sessions for a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    sessionId:
                      type: string
                    projectId:
                      type: string
                    name:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
  /sessions:
    get:
      tags: 
        - Sessions
      summary: Get all sessions
      responses:
        '200':
          description: A list of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    sessionId:
                      type: string
                    projectId:
                      type: string
                    user:
                      type: string
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
    post:
      tags: 
        - Sessions
      summary: Create a new session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                projectId:
                  type: string
                  format: uuid
                user:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                threads:
                  type: array
                  items:
                    $ref: '#/components/schemas/Thread'
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  sessionId:
                    type: string
                  projectId:
                    type: string
                    format: uuid
                  user:
                    type: string
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
  /session/{sessionId}:
    get:
      tags: 
        - Sessions
      summary: Get a session by ID
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A session
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  sessionId:
                    type: string
                  projectId:
                    type: string
                    format: uuid
                  user:
                    type: string
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  threads:
                    type: array
                    items:
                      $ref: '#/components/schemas/Thread'
    delete:
      tags: 
        - Sessions
      summary: Delete a session by ID
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session deleted
        '404':
          description: Session not found
components:
  schemas:
    Session:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
    Thread:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          type: string
        output:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
    Step:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        model_name:
          type: string
        model_metadata:
          type: string
        input:
          type: string
        output:
          type: string
        input_tokens:
          type: string
        output_tokens:
          type: string
      